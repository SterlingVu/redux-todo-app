{"ast":null,"code":"import { CREATE_TODO, CHANGE_TODO_FILTER, CLEAR_COMPLETED_TODO, UPDATE_TODO, DELETE_TODO } from '../constants/todoConstants';\nimport { createTodoInstance } from '../utils/todoUtils';\nexport const createTodoDispatchRequest = todo => ({\n  type: CREATE_TODO,\n  payload: {\n    todo\n  }\n});\nexport const createTodo = content => dispatch => {\n  const new_todo = createTodoInstance(content);\n  dispatch(createTodoDispatchRequest(new_todo));\n};\nexport const changeTodoFilterDispatchRequest = filter => ({\n  type: CHANGE_TODO_FILTER,\n  payload: {\n    filter\n  }\n});\nexport const changeTodoFilter = filter => dispatch => {\n  dispatch(changeTodoFilterDispatchRequest(filter));\n};\nexport const clearCompletedTodoDispatchRequest = () => ({\n  type: CLEAR_COMPLETED_TODO\n});\nexport const clearCompletedTodo = () => dispatch => {\n  dispatch(clearCompletedTodoDispatchRequest());\n};\nexport const updateTodoDispatchRequest = (id, attributes) => ({\n  type: UPDATE_TODO,\n  payload: {\n    id,\n    attributes\n  }\n});\nexport const updateTodo = (id, attributes) => dispatch => {\n  dispatch(updateTodoDispatchRequest(id, attributes));\n};\nexport const deleteTodoDispatchRequest = id => ({\n  type: DELETE_TODO,\n  payload: id\n});","map":{"version":3,"sources":["/Users/inmac/Desktop/ReactJS/todo-react-app/src/actions/todoActions.js"],"names":["CREATE_TODO","CHANGE_TODO_FILTER","CLEAR_COMPLETED_TODO","UPDATE_TODO","DELETE_TODO","createTodoInstance","createTodoDispatchRequest","todo","type","payload","createTodo","content","dispatch","new_todo","changeTodoFilterDispatchRequest","filter","changeTodoFilter","clearCompletedTodoDispatchRequest","clearCompletedTodo","updateTodoDispatchRequest","id","attributes","updateTodo","deleteTodoDispatchRequest"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,kBAAtB,EAA0CC,oBAA1C,EACUC,WADV,EACuBC,WADvB,QAC0C,4BAD1C;AAGA,SAASC,kBAAT,QAAmC,oBAAnC;AAEA,OAAO,MAAMC,yBAAyB,GAAIC,IAAD,KAAW;AAClDC,EAAAA,IAAI,EAAER,WAD4C;AAElDS,EAAAA,OAAO,EAAE;AAAEF,IAAAA;AAAF;AAFyC,CAAX,CAAlC;AAKP,OAAO,MAAMG,UAAU,GAAIC,OAAD,IAAcC,QAAD,IAAc;AACnD,QAAMC,QAAQ,GAAGR,kBAAkB,CAACM,OAAD,CAAnC;AACAC,EAAAA,QAAQ,CAACN,yBAAyB,CAACO,QAAD,CAA1B,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,+BAA+B,GAAIC,MAAD,KAAa;AAC1DP,EAAAA,IAAI,EAAEP,kBADoD;AAE1DQ,EAAAA,OAAO,EAAE;AAAEM,IAAAA;AAAF;AAFiD,CAAb,CAAxC;AAKP,OAAO,MAAMC,gBAAgB,GAAID,MAAD,IAAaH,QAAD,IAAc;AACxDA,EAAAA,QAAQ,CAACE,+BAA+B,CAACC,MAAD,CAAhC,CAAR;AACD,CAFM;AAIP,OAAO,MAAME,iCAAiC,GAAG,OAAO;AACtDT,EAAAA,IAAI,EAAEN;AADgD,CAAP,CAA1C;AAIP,OAAO,MAAMgB,kBAAkB,GAAG,MAAON,QAAD,IAAc;AACpDA,EAAAA,QAAQ,CAACK,iCAAiC,EAAlC,CAAR;AACD,CAFM;AAIP,OAAO,MAAME,yBAAyB,GAAG,CAACC,EAAD,EAAKC,UAAL,MAAqB;AAC5Db,EAAAA,IAAI,EAAEL,WADsD;AAE5DM,EAAAA,OAAO,EAAE;AAAEW,IAAAA,EAAF;AAAMC,IAAAA;AAAN;AAFmD,CAArB,CAAlC;AAKP,OAAO,MAAMC,UAAU,GAAG,CAACF,EAAD,EAAKC,UAAL,KAAqBT,QAAD,IAAc;AAC1DA,EAAAA,QAAQ,CAACO,yBAAyB,CAACC,EAAD,EAAKC,UAAL,CAA1B,CAAR;AACD,CAFM;AAIP,OAAO,MAAME,yBAAyB,GAAIH,EAAD,KAAS;AAChDZ,EAAAA,IAAI,EAAEJ,WAD0C;AAEhDK,EAAAA,OAAO,EAAEW;AAFuC,CAAT,CAAlC","sourcesContent":["import { CREATE_TODO, CHANGE_TODO_FILTER, CLEAR_COMPLETED_TODO,\n          UPDATE_TODO, DELETE_TODO } from '../constants/todoConstants';\n\nimport { createTodoInstance } from '../utils/todoUtils';\n\nexport const createTodoDispatchRequest = (todo) => ({\n  type: CREATE_TODO,\n  payload: { todo }\n});\n\nexport const createTodo = (content) => (dispatch) => {\n  const new_todo = createTodoInstance(content);\n  dispatch(createTodoDispatchRequest(new_todo));\n};\n\nexport const changeTodoFilterDispatchRequest = (filter) => ({\n  type: CHANGE_TODO_FILTER,\n  payload: { filter }\n});\n\nexport const changeTodoFilter = (filter) => (dispatch) => {\n  dispatch(changeTodoFilterDispatchRequest(filter));\n};\n\nexport const clearCompletedTodoDispatchRequest = () => ({\n  type: CLEAR_COMPLETED_TODO\n});\n\nexport const clearCompletedTodo = () => (dispatch) => {\n  dispatch(clearCompletedTodoDispatchRequest());\n};\n\nexport const updateTodoDispatchRequest = (id, attributes) => ({\n  type: UPDATE_TODO,\n  payload: { id, attributes }\n});\n\nexport const updateTodo = (id, attributes) => (dispatch) => {\n  dispatch(updateTodoDispatchRequest(id, attributes));\n};\n\nexport const deleteTodoDispatchRequest = (id) => ({\n  type: DELETE_TODO,\n  payload: id\n});\n"]},"metadata":{},"sourceType":"module"}